# UPDATING
sudo apt-get update

# INSTALLING JAVA JRE AND JDK
sudo apt-get -y install default-jre
sudo apt-get -y install default-jdk

# INSTALLING MAVEN
sudo apt-get update
sudo apt-get -y install maven

# INSTALLING DOCKER
sudo apt-get update
sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
sudo apt-get -y install docker-ce

# INSTALLING DOCKER-COMPOSE
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# INSTALLING PYTHON2
sudo apt-get -y install python2

# SETTING PYTHON2 AS PYTHON
sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1
sudo update-alternatives --config python

# DOWNLOAD YCSB FOLDER
curl -O --location https://github.com/brianfrankcooper/YCSB/releases/download/0.17.0/ycsb-0.17.0.tar.gz
tar xfvz ycsb-0.17.0.tar.gz
cd ycsb-0.17.0/

# CREATING FOLDER AND DOCKER-COMPOSE FILE
mkdir database

echo 'version: "3.8"

version: '2'
services:
  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.0
    volumes:
      - redis-cluster_data-5:/bitnami/redis/data
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'

volumes:
  redis-cluster_data-0:
    driver: local
  redis-cluster_data-1:
    driver: local
  redis-cluster_data-2:
    driver: local
  redis-cluster_data-3:
    driver: local
  redis-cluster_data-4:
    driver: local
  redis-cluster_data-5:
    driver: local

# LAUNCH THE WORKLOAD
./bin/ycsb load redis -s -P workloads/workloada -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputLoadA.txt
./bin/ycsb run redis -s -P workloads/workloada -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputRunA.txt

./bin/ycsb load redis -s -P workloads/workloadb -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputLoadB.txt
./bin/ycsb run redis -s -P workloads/workloadb -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputRunB.txt

./bin/ycsb load redis -s -P workloads/workloadc -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputLoadC.txt
./bin/ycsb run redis -s -P workloads/workloadc -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputRunC.txt

./bin/ycsb load redis -s -P workloads/workloadd -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputLoadD.txt
./bin/ycsb run redis -s -P workloads/workloadd -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputRunD.txt

./bin/ycsb load redis -s -P workloads/workloade -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputLoadE.txt
./bin/ycsb run redis -s -P workloads/workloade -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputRunE.txt

./bin/ycsb load redis -s -P workloads/workloadf -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputLoadF.txt
./bin/ycsb run redis -s -P workloads/workloadf -p recordcount=1000 -p "redis.host=172.20.0.7" -p "redis.port=6379" -p "redis.cluster=true" > outputRunF.txt
